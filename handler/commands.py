from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder

from config import ADMIN_ID
from db.handler.create import create_user
from db.handler.get import get_user_by_tg_id, get_message, get_tariff
# from handler.callback import process_payment
from db.handler.update import update_link
from payment.pay import process_payment


async def cmd_start(message: types.Message):
    print(message.from_user.id)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if await get_user_by_tg_id(message.from_user.id):
        await create_user(tg_id=message.from_user.id, nickname=message.from_user.username)

    # print(message.text.split()[1])
    # await message.answer(message.text)
    command_args = message.text.split()
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π
    if len(command_args) > 1:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å—Ç–∞—Ä—Ç–∞
        start_param = command_args[1]

        if await get_user_by_tg_id(message.from_user.id):
            update_link(message.from_user.id, start_param)

        if start_param == "full":
            tariff = await get_tariff("full")
            await process_payment(message, tariff.price, "–ü–æ–ª–Ω—ã–π —Ç–∞—Ä–∏—Ñ", tariff.tariff_name)
        elif start_param == "pro":
            tariff = await get_tariff("pro")
            await process_payment(message, tariff.price, "–ü—Ä–æ–¥–∞–∂–∏ –æ—Ç 0 –¥–æ PRO", tariff.tariff_name)
        elif start_param == "special":
            tariff = await get_tariff("special")
            await process_payment(message, tariff.price, "–°–ø–µ—Ü–∫—É—Ä—Å", tariff.tariff_name)
        else:
            await normal_start(message)
    else:
        await normal_start(message)


async def normal_start(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
        callback_data="step1")
    )

    # message_photo = (f"<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!</b>\n\n"
    #                  "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê—Ç–µ–º –ë–∞–±–∫–∏–Ω, –∏ —è 12 –ª–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö! "
    #                  "–ú–Ω–æ–≥–æ –æ —Å–µ–±–µ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–µ –±—É–¥—É, –ª—É—á—à–µ - –æ —Ç–µ–±–µ. ")
    message_photo = await get_message("start_text_photo")
    message_photo = message_photo.replace("?name_user", message.from_user.first_name)
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π
    # welcome_text = (
    #     "–í–µ–¥—å —Ç—ã –∑–¥–µ—Å—å –Ω–µ —Å–ª—É—á–∞–π–Ω–æ! –≠—Ç–æ—Ç –∫—É—Ä—Å —Ç–æ—á–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç –¥–ª—è —Ç–µ–±—è, –µ—Å–ª–∏ —Ç—ã:\n\n"
    #
    #     "üîπ <b>–í –ø–æ–∏—Å–∫–∞—Ö —Å–µ–±—è</b>\n"
    #     "–¢—ã —Ç–≤–µ—Ä–¥–æ —Ä–µ—à–∏–ª —Å–º–µ–Ω–∏—Ç—å —Å—Ñ–µ—Ä—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —É–π—Ç–∏ –≤ –ø—Ä–æ–¥–∞–∂–∏. "
    #     "–ë–∞–Ω–∞–ª—å–Ω–æ –Ω–µ –∑–Ω–∞–µ—à—å —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å, —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –Ω–µ –≤ —Å–≤–æ–µ–π —Ç–∞—Ä–µ–ª–∫–µ "
    #     "–∏ –ø—Ä–æ—Å—Ç–æ –Ω–µ —Ä–µ—à–∞–µ—à—å—Å—è –Ω–∞—á–∞—Ç—å –ø—Ä–æ–¥–∞–≤–∞—Ç—å.\n\n"
    #
    #     "üîπ <b>–°—Ç–µ—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–æ–ª—á—É–Ω</b>\n"
    #     "–ù–µ —Ä–µ—à–∞–µ—à—å—Å—è —Å–æ–≤–µ—Ä—à–∏—Ç—å –¥–µ–ª–æ–≤–æ–π –∑–≤–æ–Ω–æ–∫, –∞ –∫–æ–≥–¥–∞ –∑–≤–æ–Ω—è—Ç —Ç–µ–±–µ, "
    #     "—Ç–æ —É —Ç–µ–±—è –¥—Ä–æ–∂–∏—Ç –≥–æ–ª–æ—Å –∏ —Ç—Ä—è—Å—É—Ç—Å—è —Ä—É–∫–∏. –ü–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ —Ç–∞–∫ —Ç—ã –¥–∞–ª–µ–∫–æ "
    #     "–Ω–µ —É–µ–¥–µ—à—å –∏ –∏—â–µ—à—å –∫—Ç–æ –±—ã —Ç–µ–±–µ –ø–æ–º–æ–≥.\n\n"
    #
    #     "üîπ <b>–°–∫—Ä–æ–º–Ω—ã–π –Ω–æ–≤–∏—á–æ–∫</b>\n"
    #     "–¢—ã —Å–æ–≤—Å–µ–º –Ω–µ–¥–∞–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—à—å –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö –∏ –±–æ–∏—à—å—Å—è –¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏. "
    #     "–ß—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —á—Ç–æ-—Ç–æ –¥–µ–ª–∞–µ—à—å –Ω–µ —Ç–∞–∫, –Ω–æ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å –Ω–∞–¥ —á–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å.\n\n"
    #
    #     "üîπ <b>–ë—ã–≤–∞–ª—ã–π –ø—Ä–æ–¥–∞–∂–Ω–∏–∫</b>\n"
    #     "–¢—ã –¥–∞–≤–Ω–æ –ø—Ä–æ–¥–∞–µ—à—å —Ç–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏, –Ω–æ —É–ø–µ—Ä—Å—è –≤ ¬´–ø–ª–∞–Ω–∫—É –¥–æ—Ö–æ–¥–∞¬ª. "
    #     "–ù–µ –ø–æ–Ω–∏–º–∞–µ—à—å –∫–∞–∫ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–µ, –∫–∞–∫ –≤—ã–π—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π –¥–ª—è —Å–µ–±—è —É—Ä–æ–≤–µ–Ω—å.\n\n"
    #
    #     "üîπ <b>–°–ª–∞–±–æ–µ –∑–≤–µ–Ω–æ</b>\n"
    #     "–¢—ã —è—Å–Ω–æ –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ –≤ —Å–≤–æ–µ–º –∫–æ–ª–ª–µ–∫—Ç–∏–≤–µ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ —á–∏—Å–ª–µ –æ—Ç—Å—Ç–∞—é—â–∏—Ö. "
    #     "–ù–æ —ç—Ç–æ –Ω–µ –≤ —Ç–≤–æ–∏—Ö –ø—Ä–∞–≤–∏–ª–∞—Ö - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å! –¢—ã –Ω–µ –æ–ø—É—Å–∫–∞–µ—à—å —Ä—É–∫–∏, "
    #     "–∞ –Ω–∞–æ–±–æ—Ä–æ—Ç - —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ!\n\n"
    #
    #     "üîπ <b>–¢—Ä—É–¥–æ–≥–æ–ª–∏–∫ –≤ –Ω–∞–π–º–µ</b>\n"
    #     "–í—Å–µ–≥–¥–∞ –±–µ—Ä–µ—à—å –Ω–µ –∫–∞—á–µ—Å—Ç–≤–æ–º, –∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º. –£—Å—Ç–∞–ª –±–µ–≥–∞—Ç—å –∫–∞–∫ –±–µ–ª–∫–∞ –≤ –∫–æ–ª–µ—Å–µ "
    #     "–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–µ –Ω–µ ¬´—É–ø–∞—Ö–∏–≤–∞—è—Å—å¬ª –∫–∞–∫ —Ç—ã –æ–±—ã—á–Ω–æ –¥–µ–ª–∞–µ—à—å.\n\n"
    #
    #     "üîπ <b>–í–ª–∞–¥–µ–ª–µ—Ü –±–∏–∑–Ω–µ—Å–∞</b>\n"
    #     "–¢—ã —Ö–æ—á–µ—à—å —É–ª—É—á—à–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —Å–≤–æ–µ–≥–æ —à—Ç–∞—Ç–∞ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤. "
    #     "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ —Ç–≤–æ—è –ø—Ä–∏–±—ã–ª—å —É–≤–µ–ª–∏—á–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å —Ä–æ—Å—Ç–æ–º –æ–±—ä–µ–º–∞ –ø—Ä–æ–¥–∞–∂.\n\n"
    #
    #     "<b>–£–∑–Ω–∞–ª –∑–¥–µ—Å—å —Å–µ–±—è?</b> –ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É <b>'–ü–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã'</b> –∏ –∑–∞–±–∏—Ä–∞–π "
    #     "<b>–ë–ï–°–ü–õ–ê–¢–ù–û</b> —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂, –∫–æ—Ç–æ—Ä—ã–µ —Å–º–æ–∂–µ—à—å –ø—Ä–∏–º–µ–Ω—è—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!"
    # )

    welcome_text = await get_message("start_text")
    link_photo = await get_message("link_photo")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç–æ–º
    await message.answer_photo(
        photo=link_photo,
        # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π file_id –∏–ª–∏ URL —Ñ–æ—Ç–æ
        caption=message_photo,
        parse_mode="HTML"
    )

    await message.answer(
        text=welcome_text,
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )


async def admin_cmd(message: types.Message):
    print(message.from_user.id)
    if not(message.from_user.id in ADMIN_ID):
        # await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        return

    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
            text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç–∞",
            callback_data="admin_edit_texts"
        ),
        types.InlineKeyboardButton(
            text="üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏",
            callback_data="admin_ref_links"
        ),
        types.InlineKeyboardButton(
            text="–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É",
            callback_data="admin_change_price"
        )
    )
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥

    await message.answer(
        "üõ†Ô∏è <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )


async def cmd_about(message: types.Message):
    mess = await get_message("about")
    await message.answer(mess,
                         parse_mode="HTML"
                         )
